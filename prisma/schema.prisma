generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  username      String   @unique
  password      String // Encrypted password for authentication
  gamesPlayed   Int      @default(0) // Number of games played by the user
  gamesWon      Int      @default(0) // Number of games the user has won
  currentGameId String   @unique @db.ObjectId
  teamId        String?  @unique @db.ObjectId
  ChatMessages  Chat[] // Relation to chat messages sent by the user
  currentGame   Game? // Reference to the current game (if playing)
  team          Team?    @relation(fields: [teamId], references: [id]) // Reference to the team the user is assigned to
  createdAt     DateTime @default(now())
}

model Team {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  teamName String
  score    Int
  players  Int[]
  User     User[]
  Game     Game[]
  Chat     Chat[]
}

model Game {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  teamIds            String[]
  rounds             Int // Total number of rounds (e.g., 3)
  currentRound       Int // Tracks the current round
  currentWord        String? // The word that is currently being described
  similarWords       String[] // List of similar words
  ChatMessages       Chat[] // Relation to chat messages for this game
  correctGuesses     Int      @default(0) // Total correct guesses
  status             Status   @default(WAITING) // 'waiting', 'in progress', 'finished'
  currentTurnTeamId  String?  @unique @db.ObjectId
  currentDescriberId String?  @unique @db.ObjectId
  currentTurnTeam    Team?    @relation(fields: [currentTurnTeamId], references: [id]) // Reference to the team currently playing
  currentDescriber   User?    @relation(fields: [currentDescriberId], references: [id]) // Player currently describing the word
}

model Chat {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  gameId      String   @unique @db.ObjectId
  teamId      String   @unique @db.ObjectId
  userId      String   @unique @db.ObjectId
  message     String // The chat message
  messageType String // 'description' or 'guess'
  createdAt   DateTime @default(now()) // Timestamp when the message was sent
  game        Game     @relation(fields: [gameId], references: [id]) // Reference to the game
  team        Team     @relation(fields: [teamId], references: [id]) // Reference to the team
  user        User     @relation(fields: [userId], references: [id]) // Reference to the user
}

enum Status {
  WAITING
  IN_PROGRESS
  FINISHED
}
